(()=>{"use strict";var e={788:(e,t,l)=>{l.r(t);const s=(e,t,l,s,r)=>{let o=["6","7","8","9","10","J","Q","K","A"];for(let i=0;i<o.length;i++)if(e===o[i])for(let e=0;e<o.length;e++)if(l===o[e])return e>i&&t===s||e<=i&&s===r&&t!==r},r=document.querySelector(".wrapper"),o=r.querySelector(".player1"),i=r.querySelector(".player2"),n=r.querySelector(".middleField"),a=n.querySelector(".playField"),d=n.querySelector(".mainDeck");(e=l.hmd(e)).exports=(e,t,l,r)=>{for(let n=0;n<e.length;n++){o.insertAdjacentHTML("beforeend",`<img src="./assets/${e[n].level}${e[n].suit}.png" \n                    alt="${e[n].level}${e[n].suit}"/>`);let d=o.querySelectorAll("img")[n];d.addEventListener("click",(()=>{let o=e.splice(n,1)[0];console.log("this is Player1Deck",e),console.log("this is attacking card",o),d.remove(),r.push(o),console.log("this is cards on playField",r),a.insertAdjacentHTML("afterbegin",`<img src="./assets/${o.level}${o.suit}.png" \n                    alt="${o.level}${o.suit}"/>`),setTimeout((()=>{for(let e=0;e<t.length;e++){let n=s(o.level,o.suit,t[e].level,t[e].suit,l.suit);if(console.log("player2 wins?",n),console.log("====",e),!0===n){let l=t.splice(e,1)[0];return console.log("this is updated player2 cards",t),console.log("this is defendCard of player2",l),r.push(l),console.log("this is updated playField cards",r),i.querySelectorAll("img")[e].remove(),void a.insertAdjacentHTML("afterbegin",`<img src="./assets/${l.level}${l.suit}.png" \n                                    alt="${l.level}${l.suit}"/>`)}}r.splice(0,1),console.log("this is updated cards on playField",r),a.querySelector("img").remove(),t.push(o),console.log("this is updated player2 cards",t),i.insertAdjacentHTML("beforeend",`<img src="./assets/${o.level}${o.suit}.png" \n                            alt="${o.level}${o.suit}"/>`)}),2e3)})),i.insertAdjacentHTML("beforeend",`<img src="./assets/${t[n].level}${t[n].suit}.png" \n                    alt="${t[n].level}${t[n].suit}"/>`)}d.insertAdjacentHTML("afterbegin",`<img src="./assets/${l.level}${l.suit}.png" alt="${l.level}${l.suit}"/>`)}}},t={};function l(s){var r=t[s];if(void 0!==r)return r.exports;var o=t[s]={id:s,loaded:!1,exports:{}};return e[s](o,o.exports,l),o.loaded=!0,o.exports}l.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{class e{constructor(e,t){this.level=e,this.suit=t}}const t=new class{constructor(){this.deck=[],this.shuffledDeck=[]}generateCardsDeck=(t,l)=>{for(let s=0;s<l.length;s++)for(let r=0;r<t.length;r++)this.deck.push(new e(t[r],l[s]))};shuffleDeck=()=>{let e=(t,l)=>{if(t.length<1)return;let s=Math.floor(Math.random()*l);this.shuffledDeck.push(t[s]);let r=t.filter((e=>e!==t[s]));e(r,l-1)};e(this.deck,this.deck.length)};takeOneCard=()=>this.shuffledDeck.pop();putOneCard=(e,t)=>(t.push(e),t)};t.generateCardsDeck(["6","7","8","9","10","J","Q","K","A"],["Spades","Clubs","Diamonds","Hearts"]),t.deck.shuffleDeck();const s=((e,l)=>{for(let s=0;s<6;s++){let s=t.takeOneCard();t.putOneCard(s,e),s=t.takeOneCard(),t.putOneCard(s,l)}return[e,l,t.takeOneCard()]})([],[]);let r=s[0],o=s[1],i=s[2];l(788)(r,o,i,[])})()})();