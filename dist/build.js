(()=>{"use strict";const e=["6","7","8","9","10","J","Q","K","A"];class t{constructor(e,t){this.level=e,this.suit=t}}const l=new class{constructor(){this.deck=[]}generateCardsDeck(e,l){for(let s=0;s<l.length;s++)for(let r=0;r<e.length;r++)this.deck.push(new t(e[r],l[s]))}shuffleDeck(){let e=[],t=(l,s)=>{if(l.length<1)return e;let r=Math.floor(Math.random()*s);e.push(l[r]);let n=l.filter((e=>e!==l[r]));t(n,s-1)};t(this.deck,this.deck.length),this.deck=e}takeOneCard(){return this.deck.pop()}putOneCard(e,t){return t.push(e),t}};l.generateCardsDeck(e,["Spades","Clubs","Diamonds","Hearts"]),l.shuffleDeck();const s=((e,t)=>{for(let s=0;s<6;s++){let s=l.takeOneCard();l.putOneCard(s,e),s=l.takeOneCard(),l.putOneCard(s,t)}return[e,t,l.takeOneCard()]})([],[]);let r=s[0],n=s[1],i=s[2];const o=(t,l,s,r,n)=>{for(let i=0;i<e.length;i++)if(t===e[i])for(let t=0;t<e.length;t++)if(s===e[t])return t>i&&l===r||t<=i&&r===n&&l!==n},a=document.querySelector(".wrapper"),c=a.querySelector(".player1"),d=a.querySelector(".player2"),u=a.querySelector(".middleField"),g=u.querySelector(".playField"),p=u.querySelector(".mainDeck");u.querySelector(".finishedCards"),a.querySelector(".beaten button"),a.querySelector(".getMoreCards button"),((e,t,l,s)=>{for(let r=0;r<e.length;r++){c.insertAdjacentHTML("beforeend",`<img src="./assets/${e[r].level}${e[r].suit}.png" \n                    alt="${e[r].level}${e[r].suit}"/>`),console.log("wat");let n=c.querySelectorAll("img")[r];n.addEventListener("click",(()=>{let i=e.splice(r,1)[0];console.log("this is Player1Deck",e),console.log("this is attacking card",i),console.log("wa"),n.remove(),s.push(i),console.log("this is cards on playField",s),g.insertAdjacentHTML("afterbegin",`<img src="./assets/${i.level}${i.suit}.png" \n                    alt="${i.level}${i.suit}"/>`),setTimeout((()=>{for(let e=0;e<t.length;e++){let r=o(i.level,i.suit,t[e].level,t[e].suit,l.suit);if(console.log("player2 wins?",r),console.log("====",e),!0===r){let l=t.splice(e,1)[0];return console.log("this is updated player2 cards",t),console.log("this is defendCard of player2",l),s.push(l),console.log("this is updated playField cards",s),d.querySelectorAll("img")[e].remove(),void g.insertAdjacentHTML("afterbegin",`<img src="./assets/${l.level}${l.suit}.png" \n                                    alt="${l.level}${l.suit}"/>`)}}s.splice(0,1),console.log("this is updated cards on playField",s),g.querySelector("img").remove(),t.push(i),console.log("this is updated player2 cards",t),d.insertAdjacentHTML("beforeend",`<img src="./assets/${i.level}${i.suit}.png" \n                            alt="${i.level}${i.suit}"/>`)}),2e3)})),d.insertAdjacentHTML("beforeend",`<img src="./assets/${t[r].level}${t[r].suit}.png" \n                    alt="${t[r].level}${t[r].suit}"/>`)}p.insertAdjacentHTML("afterbegin",`<img src="./assets/${l.level}${l.suit}.png" alt="${l.level}${l.suit}"/>`)})(r,n,i,[])})();